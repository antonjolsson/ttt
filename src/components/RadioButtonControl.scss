@use '../App';

.radio-button-control {
    display: flex;
    flex-direction: row;
    align-items: center;
    font-size: App.$btn-font-size;
    text-transform: uppercase;
    padding: 0.5rem;
    justify-content: flex-start;
    width: 100%;
    gap: 0.9rem;

    @media (width <= (App.$screen-break-point-large)) and (width > (App.$screen-break-point-small)) {
        $font-size: App.$btn-font-size;

        font-size: $font-size;
        gap: 1.1rem;
        padding: 0.3rem / App.$large-small-font-size-ratio;
    }

    @media (width <= (App.$screen-break-point-small)) {
        $font-size: App.$large-small-font-size-ratio * App.$btn-font-size;

        font-size: min($font-size, 7vw);
        gap: 1.1rem * App.$large-small-font-size-ratio;
        padding: 0.3rem;
    }

    .control-label {
        width: 4rem;
        text-align: right;
        margin: 0;

        @media (width <= (App.$screen-break-point-large)) {
            width: 4rem * App.$large-small-font-size-ratio;
        }

        &.disabled {
            color: App.$dark-gray;
        }
    }

    .options {
        display: flex;
        flex-direction: row;
        gap: min(0.5rem, 1.5vw);

        @media (width <= (App.$screen-break-point-small)) {
            gap: 0.7rem * App.$large-small-font-size-ratio;
        }

        @media (width <= (App.$screen-break-point-large)) and (width > (App.$screen-break-point-small)) {
            gap: 0.7rem;
        }

        .option {
            transition: color App.$transition-duration-short;
            word-break: keep-all;
            white-space: nowrap;

            @media (width <= (App.$screen-break-point-large)) {
                word-break: break-all;
            }

            &.unselected {
                color: App.$light-gray;

                &:not(.disabled) {
                    cursor: pointer;

                    &:hover {
                        color: inherit;
                    }
                }

                &.disabled {
                    color: App.$light-gray;
                }
            }

            &.selected {
                &.disabled {
                    color: App.$dark-gray;
                }
            }
        }
    }
}
